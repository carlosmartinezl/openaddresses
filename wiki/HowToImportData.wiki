<wiki:toc max_depth="2" />

= Transfer from dev to prod =

{{{
scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/carolina/*.zip .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/zipcode/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/country/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/washington/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/morges/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/portland/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/city_swiss/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/bti/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/brwinow/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/indiana/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/vancouver/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/nanaimo/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/metrogis/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/wellington/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/paarl/* .

scp oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/uster/* .
}}}

= Transfer from prod to dev =

{{{
scp * oa_os@geolin01.cti.ac.at:/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/.
}}}

= Manage Encoding =

{{{

# On Windows: convert to UTF-8:
# C:\Sandbox\openadresses\trunk\openaddresses\data>"C:\Program Files\GnuWin32\bin\iconv.exe" -f windows-1252 -t UTF-8 oa_ch.csv > oa_ch_utf8.csv

dos2unix.exe
}}}

= Situs Addresses for State of Arkansas =

 * Data origin: Arkansas Geographic Information Office- Putting Arkansas on the Map!
 * Contact person: Learon Dalby- GIS Program Manager / learon.dalby at arkansas.gov
 * License validation: email from 3/30/2010 / 7/1/2010
 * Import shapefile

{{{

psql -d openaddresses

drop table arkansas cascade;
delete from address where created_by = 'arkansas.gov';
\q

unzip *.zip

shp2pgsql -s 26915 STRUC_SITUS_ADDRESS_PT_point arkansas > arkansas.sql

psql -d openaddresses -f arkansas.sql > /tmp/arkansas.log

sudo su postgres 

psql -d openaddresses

INSERT INTO address (
   housenumber,
   street,
   postcode,
   city,
   country,
   region,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
      adr_num,
      rtrim(ltrim(pstr_name || ' ') || coalesce(pstr_type,'')),
      adr_zip5,
      adr_city,
      'US',
      cnty_name,
      'arkansas.gov',
      now(),
      'http://www.openaddresses.org',
      'Donated',
      ST_Force_2D(transform(the_geom,4326))
   FROM arkansas);
}}}

= North Carolina =

 * Data origin: NC Center for Geographic Information & Analysis
 * Contact person: juliaharrell at mindspring.com 
 * License validation: email from 4/30/2010
 * Import shapefile

{{{
unzip NCMasterAddress_area01_shp.zip
unzip NCMasterAddress_area02_shp.zip
unzip NCMasterAddress_area03_shp.zip
unzip NCMasterAddress_area04_shp.zip
unzip NCMasterAddress_area05_shp.zip
unzip NCMasterAddress_area06_shp.zip
unzip NCMasterAddress_area07_shp.zip
unzip NCMasterAddress_area08_shp.zip
unzip NCMasterAddress_area09_shp.zip
unzip NCMasterAddress_area10_shp.zip

shp2pgsql -s 4326  NCMasterAddress_Area01 carolina1 > carolina1.sql
shp2pgsql -s 4326  NCMasterAddress_Area02 carolina2 > carolina2.sql
shp2pgsql -s 4326  NCMasterAddress_Area03 carolina3 > carolina3.sql
shp2pgsql -s 4326  NCMasterAddress_Area04 carolina4 > carolina4.sql
shp2pgsql -s 4326  NCMasterAddress_Area05 carolina5 > carolina5.sql
shp2pgsql -s 4326  NCMasterAddress_Area06 carolina6 > carolina6.sql
shp2pgsql -s 4326  NCMasterAddress_Area07 carolina7 > carolina7.sql
shp2pgsql -s 4326  NCMasterAddress_Area08 carolina8 > carolina8.sql
shp2pgsql -s 4326  NCMasterAddress_Area09 carolina9 > carolina9.sql
shp2pgsql -s 4326  NCMasterAddress_Area10 carolina10 > carolina10.sql

sudo su postgres

psql -d openaddresses -f carolina1.sql
psql -d openaddresses -f carolina2.sql
psql -d openaddresses -f carolina3.sql
psql -d openaddresses -f carolina4.sql
psql -d openaddresses -f carolina5.sql
psql -d openaddresses -f carolina6.sql
psql -d openaddresses -f carolina7.sql
psql -d openaddresses -f carolina8.sql
psql -d openaddresses -f carolina9.sql
psql -d openaddresses -f carolina10.sql


sudo su postgres
psql -d openadresses

INSERT INTO address (
   housenumber,
   street,
   postcode,
   country,
   region,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
      address_nu,
      rtrim(ltrim(str_name || ' ') || coalesce(str_po_typ,'')),
      zip_code,
      'US',
      county,
      'The State of NC',
      now(),
      'http://www.openaddresses.org',
      'Donated',
      GeomFromEWKT('SRID=4326;POINT(' || address_lo || ' ' || address_la || ')') geom
   FROM carolinax);
}}}

 * Set zipcode

{{{
update public.address set city = (select public.zipcode.city from public.zipcode where public.address.postcode = public.zipcode.zip and public.zipcode.zip is not null) where public.address.created_by = 'The State of NC'; 
}}}

= US ZIP Code =

 * Data origin: http://mappinghacks.com/data/ http://ramsonit.wordpress.com/2008/04/29/free-us-zip-code-database-as-csv/
 * Contact person: schuyler geocoder.us
 * License: The database andthis README are copyright 2004 CivicSpace Labs, Inc., and are published under a Creative Commons Attribution-ShareAlike license, which requires that all updates must be released under the same license. See http://creativecommons.org/licenses/by-sa/2.0/ for more details.

{{{
sudo su postgres

create table zipcode (
    zip char(5) primary key,
    city varchar(64),
    state char(2),
    latitude varchar(64),
    longitude varchar(64),
    timezone int,
    dst varchar(16)
);

COPY zipcode FROM '/home/admin/openaddresses/trunk/openaddresses/data/zipcode/zipcode.csv' WITH DELIMITER ',' CSV HEADER NULL AS '';

create index zipcode_zip on zipcode USING btree(zip);
}}}

= World countries =

 * Data origin: http://www.gadm.org/
 * Contact person: ?
 * License validation: This dataset is freely available for academic and other non-commercial use. Redistribution, or commercial use, is not allowed without prior permission.
 * Import shapefile

{{{
shp2pgsql -s 4326  gadm1_lev0 country > country.sql

sudo su postgres

psql -d openaddresses -f country.sql

psql -d openaddresses

CREATE INDEX idx_country_geom
  ON country
  USING gist
  (the_geom);
}}}

= Washington,DC =

 * Data origin: GIS department for Washington, DC
 * Contact person: davidy.jackson at dc.gov
 * License validation: email from 4/08/2010
 * Import shapefile

{{{

unzip AddressPt.ZIP

shp2pgsql -s 26985 AddressPt washington > washington.sql

sudo su postgres

psql -d openaddresses -f washington.sql

psql -d openaddresses

INSERT INTO address (
   housenumber,
   street,
   postcode,
   city,
   country,
   region,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     substring(addrnum || ' ' || coalesce(addrnumsuf,'') from 1 for 8),
     rtrim(ltrim(coalesce(stname,'')) || ' ' || coalesce(street_typ,'') ||  ' ' || coalesce(quadrant,'')),
     round(zipcode),
     'Washington',
     'US',
     'DC',
     'DC GIS',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     GeomFromEWKT('SRID=4326;POINT(' || longitude|| ' ' || latitude || ')') geom
FROM washington where status != 'RETIRE');

}}}

= Morges =

 * Data origin: Morges City, Switzerland
 * Contact person: roger.maurer at morges.ch
 * License validation: email from 4/13/2010
 * Import csv

{{{

"C:\Program Files\GnuWin32\bin\iconv.exe" -f windows-1252 -t UTF-8 Morges_Adresses_Etat13042010.csv > morges.csv

sudo su postgres
psql -d openaddresses

drop table importtmp cascade;

create table importtmp (attr1 VARCHAR(255),
attr2 VARCHAR(255),
attr3 VARCHAR(255),
attr4 VARCHAR(255),
attr5 VARCHAR(255),
attr6 VARCHAR(255));

COPY importtmp FROM '/home/admin/openaddresses/trunk/openaddresses/data/morges/morges.csv' WITH DELIMITER ';' CSV HEADER;

select count(1) from address where created_by = 'GemMorges';

delete from address where created_by = 'GemMorges';

INSERT INTO address (
   housenumber,
   street,
   postcode,
   city,
   country,
   region,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     attr6,
     attr5,
     1110,
     'Morges',
     'CH',
     'Vaud',
     'Ville de Morges',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     transform(GeomFromEWKT('SRID=21781;POINT(' || attr3 || ' ' || attr2 || ')'),4326) geom
FROM importtmp);

}}}

= Portland =

 * Data origin: Portland City / Metro
 * Contact person: Rick.Nixon at portlandoregon.gov
 * License validation: email from 4/13/2010
 * Import csv / shp

{{{

shp2pgsql -s 4326 master_address portland_region > portland_region.sql

sudo su postgres

psql -d openaddresses -f portland_region.sql

psql -d openaddresses

INSERT INTO address (
   housenumber,
   street,
   postcode,
   city,
   country,
   region,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     house,
     rtrim(ltrim(coalesce(fdpre,'') || ' ') || coalesce(fname,'') || ' ' || ltrim(coalesce(fdsuf,''))),
     zip,
     mail_city,
     'US',
     state,
     'Metro DRC Portland',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     ST_Force_2D(the_geom) geom
FROM portland_region);
}}}

= Swiss Cities =

 * Data origin: OSM / Swisstopo
 * Contact person: Thomas Ineichen osm at t-i.ch
 * License validation: email from 4/16/2010
 * Import shp

{{{

shp2pgsql -s 21781 gg25_a_v2 city_swiss > city_swiss.sql

sudo su postgres

psql -d openaddresses -f city_swiss.sql

psql -d openaddresses

create table city as select gemname as name, transform(the_geom, 4326) as geom from city_swiss;

CREATE INDEX idx_city_geom
  ON city
  USING gist
  (geom);

create index city_name on city USING btree(name);

pgsql2shp openaddresses city -f swiss_city  -u postgres -P XXX
}}}

= Brwinow =

 * Data origin: Brwinow  / Poland
 * Contact person: geo-system geo-system.com.pl
 * License validation: email from 5/04/2010
 * Import shp

{{{

shp2pgsql -s 4326 -W 'utf-8' addresses poland > poland.sql

sudo su postgres

psql -d openaddresses -f poland.sql

psql -d openaddresses

INSERT INTO address (
   housenumber,
   street,
   city,
   country,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     number,
     street,
     city,
     'PL',
     'geo-system',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     ST_Force_2D(the_geom) geom
FROM poland);
}}}

= BTI Riviera=

 * Data origin: BTI
 * Contact person: v.rizzi b-t-i.ch
 * License validation: call from 5/11/2010
 * Import shp

{{{

shp2pgsql -s 4326 -W 'utf-8' adresse riviera > riviera.sql

sudo su postgres

psql -d openaddresses -f riviera.sql

psql -d openaddresses

INSERT INTO address (
   housenumber,
   street,
   city,
   postcode,
   country,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     no,
     nom_de_rue,
     commune,
     code_posta,
     'CH',
     'BTI',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     the_geom geom
FROM riviera);
}}}

= Indiana =

 * Data origin: Indiana Geographic Information Council / US
 * Contact person: Philipp Worrall pworrall igic.org
 * License validation: email from 5/13/2010
 * Import shp

{{{

shp2pgsql -s 26916 Indiana_Address_Points_April_2010 indiana > indiana.sql

sudo su postgres

psql -d openaddresses -f indiana.sql > /tmp/indiana.log

psql -d openaddresses

INSERT INTO address (
   street,
   postcode,
   city,
   country,
   region,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     full_addre,
     ltrim(substring(to_char(address_zi,'99999999') from 1 for 8)),
     address_ci,
     'US',
     address_co,
     'igic.org',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     transform(the_geom, 4326) geom
FROM indiana where st_y(the_geom) > -1000000000 and st_x(the_geom) > -1000000000);
}}}

=  Vancouver =

 * Data origin: http://data.vancouver.ca/datacatalogue/index.htm
 * Contact person: jonathan.mark at vancouver.ca
 * License validation: email from 2010/5/17
 * Import csv

{{{

unzip *.zip

sudo su postgres
psql -d openaddresses

create table vancouver(attr1 VARCHAR(255),
attr2 VARCHAR(255),
attr3 VARCHAR(255),
attr4 VARCHAR(255),
attr5 VARCHAR(255),
attr6 VARCHAR(255),
attr7 VARCHAR(255),
attr8 VARCHAR(255),
attr9 VARCHAR(255),
attr10 VARCHAR(255),
attr11 VARCHAR(255),
attr12 VARCHAR(255),
attr13 VARCHAR(255),
attr14 VARCHAR(255),
attr15 VARCHAR(255),
attr16 VARCHAR(255),
attr17 VARCHAR(255),
attr18 VARCHAR(255),
attr19 VARCHAR(255),
attr20 VARCHAR(255),
attr21 VARCHAR(255),
attr22 VARCHAR(255),
attr23 VARCHAR(255),
attr24 VARCHAR(255));

COPY vancouver FROM '/home/admin/openaddresses/trunk/openaddresses/data/vancouver/ICIS_AddressBC.csv' WITH DELIMITER ',' CSV HEADER NULL AS '';

INSERT INTO address (
   street,
   city,
   country,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     attr7,
     'Vancouver',
     'CA',
     'http://data.vancouver.ca/termsOfUse.htm',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     GeomFromEWKT('SRID=4326;POINT(' || attr4 || ' ' || attr3 || ')') geom
FROM vancouver);
}}}

= Nanaimo =

 * Data origin: http://www.nanaimo.ca/EN/main/departments/Engineering-Public-Works/4489/Disclaimer.html
 * Contact person: Jason.Birch at nanaimo.ca
 * License validation: email from 5/22/2010
 * Import shp, with treatment of Jean-Luc

{{{

unzip *.zip

shp2pgsql -s 4326 PARCELS_points nanaimo > nanaimo.sql

sudo su postgres

psql -d openaddresses -f nanaimo.sql > /tmp/nanaimo.log

psql -d openaddresses

INSERT INTO address (
   street,
   housenumber,
   postcode,
   city,
   country,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     str_name,
     str_no,
     post_code,
     city,
     'CA',
     'City of Nanaimo',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     the_geom geom
FROM nanaimo where char_length(str_no) < 9);
}}}

= Metrogis =

 * Data origin: http://www.datafinder.org/metadata/metrogis_address_points.htm
 * Contact person: mark.kotz at metc.state.mn.us Metropolitan Council GIS, 
 * License validation: email from 5/26/2010
 * Import shp

{{{

shp2pgsql -s 26915 metrogis_address_points metrogis > metrogis.sql

sudo su postgres

psql -d openaddresses -f metrogis.sql > /tmp/metrogis.log

psql -d openaddresses

INSERT INTO address (
   housenumber,
   street,
   postcode,
   city,
   country,
   region,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     round(ANUMBER),
     ST_NAME || ' ' || ST_POS_TYP || ' ' || ST_POS_DIR,
     ZIP,
     MUNI_NAME,
     'US',
     CO_NAME,
     EDIT_ORG,
     now(),
     'http://www.openaddresses.org',
     'Donated',
     transform(the_geom, 4326) geom
FROM metrogis);
}}}

= Wellington,South Africa =

 * Data origin: Wellington, South Africa
 * Contact person: schalk at quidity.co.za
 * License validation: email from 6/3/2010
 * Import csv

{{{


sudo su postgres
psql -d openaddresses

drop table importtmp cascade;

create table importtmp (attr1 VARCHAR(255),
attr2 VARCHAR(255),
attr3 VARCHAR(255),
attr4 VARCHAR(255),
attr5 VARCHAR(255),
attr6 VARCHAR(255),
attr7 VARCHAR(255),
attr8 VARCHAR(255),
attr9 VARCHAR(255),
attr10 VARCHAR(255),
attr11 VARCHAR(255));

COPY importtmp FROM '/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/wellington/Wellington.csv' WITH DELIMITER ',' CSV HEADER;

COPY importtmp FROM '/home/admin/openaddresses/trunk/openaddresses/data/wellington/Wellington.csv' WITH DELIMITER ',' CSV HEADER;

INSERT INTO address (
   housenumber,
   street,
   housename,
   city,
   country,
   region,
   locality,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     attr1,
     attr3,
     attr2,
     attr5,
     attr7,
     attr6,
     attr4,
     attr11,
     now(),
     'http://www.openaddresses.org',
     'Donated',
     GeomFromEWKT('SRID=4326;POINT(' || attr8 || ' ' || attr9 || ')') geom
FROM importtmp);
}}}

= Paarl,South Africa =

 * Data origin: Paarl, South Africa
 * Contact person: schalk at quidity.co.za
 * License validation: email from 6/5/2010
 * Import csv

{{{


sudo su postgres
psql -d openaddresses

drop table importtmp cascade;

create table importtmp (attr1 VARCHAR(255),
attr2 VARCHAR(255),
attr3 VARCHAR(255),
attr4 VARCHAR(255),
attr5 VARCHAR(255),
attr6 VARCHAR(255),
attr7 VARCHAR(255),
attr8 VARCHAR(255),
attr9 VARCHAR(255),
attr10 VARCHAR(255),
attr11 VARCHAR(255));

COPY importtmp FROM '/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/data/paarl/Paarl.csv' WITH DELIMITER ',' CSV HEADER;

COPY importtmp FROM '/home/admin/openaddresses/trunk/openaddresses/data/paarl/Paarl.csv' WITH DELIMITER ',' CSV HEADER;

INSERT INTO address (
   housenumber,
   street,
   housename,
   city,
   country,
   region,
   locality,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     attr1,
     attr3,
     attr2,
     attr5,
     attr7,
     attr6,
     attr4,
     attr11,
     now(),
     'http://www.openaddresses.org',
     'Donated',
     GeomFromEWKT('SRID=4326;POINT(' || attr8 || ' ' || attr9 || ')') geom
FROM importtmp where attr8 <> 'null' and attr9 <> 'null');

}}}


= Uster, Switzerland =

 * Data origin: City of Uster
 * Contact person: andreas.neumann at stadt-uster.ch
 * License validation: email from 6/7/2010
 * Import shp, deleted 15 invalid data

{{{

shp2pgsql -s 21781 -W 'utf-8' gebaeudeadressen_uster uster > uster.sql

sudo su postgres

psql -d openaddresses -f uster.sql

psql -d openaddresses

INSERT INTO address (
   housenumber,
   street,
   postcode,
   city,
   country,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     hausnummer,
     strasse,
     plz,
     ort,
     'CH',
     'Uster',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     transform(the_geom, 4326)
FROM uster);
}}}


= Erfurt, Germany=

 * Data origin: City of Erfurt ??
 * Contact person: ???
 * License validation: ??
 * Import shp/csv

{{{

shp2pgsql -s 4326 -W 'utf-8' erfurt_pts erfurt > erfurt.sql

sudo su postgres

psql -d openaddresses -f erfurt.sql

psql -d openaddresses

INSERT INTO address (
   housenumber,
   street,
   postcode,
   city,
   country,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     house_nr,
     street,
     zip,
     ort,
     'DE',
     'Erfurt',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     transform(the_geom, 4326)
FROM erfurt);
}}}

= Arvada, Colorado=

 * Data origin: City of Arvada
 * Contact person: Sargent McDonald
 * License validation: email from 22/7/2010
 * Import shp

{{{

shp2pgsql -s 4269 -W 'utf-8' OpenAddresses arvada > arvada.sql

sudo su postgres

psql -d openaddresses -f arvada.sql

psql -d openaddresses

INSERT INTO address (
   housenumber,
   street,
   postcode,
   city,
   country,
   created_by,
   time_created,
   reference,
   quality,
   geom) (SELECT
     street_num,
     concatenate(street_pre,street_nam,street_typ),
     zip_4,
     mailing_ci,
     'USA',
     'Arvada',
     now(),
     'http://www.openaddresses.org',
     'Donated',
     transform(the_geom, 4326)
FROM arvada);
}}}