Install !OpenAddresses on Suse

<wiki:toc max_depth="2" />

= Environment =

 * Main URL: http://geolin01.cti.ac.at/oa_os/
 * FTP & SSH: geolin01.cti.ac.at
  * Login: oa_os
   * ssh geolin01.cti.ac.at -l oa_os
 * Postgresql:
  * Login: oa_os
  * postgis-template for new database: “template_gis“
 * pgAdmin-Webinterface: http://geolin01.cti.ac.at/phpPgAdmin/

= Requirements =

 * Apache with mod_wsgi
 * !MapServer
 * Postgres 8.4 / PostGIS
 * Geos
 * Python 2.5

= Utils =

 * Putty: http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html
 * Filezilla: http://filezilla-project.org/

= !HowTo Install !OpenAddresses Server =

== Checkout Code ==

 1. Create a directory openaddresses
{{{
cd /srv/www/htdocs/oa_os
mkdir openaddresses
}}}
 1. Create a directory trunk inside openaddresses
{{{
cd openaddresses/
mkdir trunk
}}}
 1. Checkout code (login info here: http://code.google.com/p/openaddresses/source/checkout)
{{{
   svn co https://openaddresses.googlecode.com/svn/trunk/
}}}
 1. Localize app
  * in /srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses
  * easy_install Babel
  * python setup.py compile_catalog 

== Install !MapFish ==

 1. (required only the first time) Install !MapFish  in a virtual env at the same level as the trunk directory: http://www.mapfish.org/doc/1.2/installation.html 
  1. 
{{{
cd
curl http://www.mapfish.org/downloads/go-mapfish-framework-1.2.py
}}}
  1. Install Virtual environment
{{{
python go-mapfish-framework-1.2.py --no-site-packages env
}}}
  1. Activate Virtual environment:
{{{
source env/bin/activate
}}}
  1. To check that everything is ok:
{{{
paster create --list-templates
}}}
  1. And you should see:
{{{
Available templates:
  basic_package:   A basic setuptools-enabled package
  mapfish:         MapFish application template
  mapfish_client:  MapFish client plugin template
  paste_deploy:    A web application deployed through paste.deploy
  pylons:          Pylons application template
  pylons_minimal:  Pylons minimal application template
}}}

== Localize application ==

 * (required only the first time) Server side localization
  * in trunk/openaddresses, start in command line
   * easy_install Babel
   * python setup.py compile_catalog
  * Documentation http://wiki.pylonshq.com/display/pylonsdocs/Internationalization+and+Localization 

== Start !MapFish ==

This has to be done everytime you want to test the application

{{{
cd
source env/bin/activate
cd trunk/openaddresses
paster serve --reload development.ini
http://geolin01.cti.ac.at:5000/
}}}
/srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/apache

== Install !MapServer ==

 * (required only the first time) 
  * add in EPSG:
{{{
<900913> +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs
}}}

== Install !OpenAddresses in WSGI Mod ==
 
 * Create directory /srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses/apache
 * Add file wsgi.conf
 * In directory /srv/www/htdocs/oa_os/openaddresses/trunk/openaddresses, create a file openaddresses.wsgi
 * Add include in /etd/apache2/httpd.conf
 * sudo /etc/init.d/apache2 configtest
 * sudo /etc/init.d/apache2 restart
 * Access server: http://geolin01.cti.ac.at/openaddresses
 * Error log: /var/log/apache2
 * (Not active now) Test with !ProxyPass: /etc/apache2/httpd.conf
  * Add proxy and proxy_http in/etc/sysconfig/apache2
  * Check proxy module in /etc/apache2/sysconfig.d/loadmodule.conf
  * Module directory /usr/lib/apache2 for module
  * Add vhostopenaddresses.conftest in /etc/apache2/vhosts.d

== Create database ==

 * (required only the first time) psql -U postgres
  * CREATE DATABASE openaddresses TEMPLATE=template_gis;

 